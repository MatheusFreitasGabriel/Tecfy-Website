/* Definição das keyframes para a animação de fade (opacidade 0 para 1)
   e movimento (50px de baixo para cima) */
@keyframes fade-down-up {
  from {
    opacity: 0;
    transform: translateY(50px); /* Começa 50px abaixo da posição final */
  }
  to {
    opacity: 1;
    transform: translateY(0); /* Termina na posição original */
  }
}

.choices-content {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  /* A animação original é removida daqui e aplicada individualmente aos filhos */
}

/* 1. Oculta todos os elementos filhos inicialmente para que a animação possa fazê-los aparecer */
.choices-content > * {
  opacity: 0; /* Garante que os filhos comecem invisíveis */
  animation: fade-down-up 1s ease-out forwards;
}

/* 2. Aplicação do Atraso (Delay) Sequencial para a Animação */

/* Indicador (Primeiro elemento) */
.choices-content > .indicator {
  animation-delay: 0.1s; /* Inicia bem rápido */
}

/* Título H1 (Segundo elemento) */
.choices-content > h1 {
  animation-delay: 0.3s;
}

/* Container de Comparação (Terceiro elemento) */
.choices-content > .choices-comparsion {
  animation-delay: 0.5s;
}

/* --- Elementos Internos do Container de Comparação (Opcional: Detalhamento) --- */

/* Se você quiser que as colunas (negative-section e positive-section) também tenham atraso: */
.choices-comparsion > .negative-section,
.choices-comparsion > img {
  animation-delay: 0.7s;
}

.choices-comparsion > .positive-section {
  animation-delay: 0.9s;
}

/* Opcionalmente, você pode querer atrasar ainda mais cada 'comparsion' item
   dentro das seções, mas o CSS abaixo lida com os elementos principais. */


.indicator {
  width: fit-content;
  padding: 12px 16px;
  display: flex;
  flex-direction: row;
  gap: 12px;
  background-color: var(--color-indicator-white);
  border-radius: 100px;
  margin-bottom: 24px;
  align-items: center;
}

.indicator p {
  font-size: 12px;
  font-weight: var(--font-weight-semiBold);
  color: var(--color-text-black);
  font-family: var(--font-title);
}

.indicator svg {
  width: 16px;
  height: 16px;
}


h1 {
  font-size: 1.6rem;
  margin-bottom: 24px;
}

.choices-comparsion {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 12px;
}

.choices-comparsion img {
  /* Garante que a imagem oculta comece invisível e receba o atraso */
  opacity: 0;
  display: none; /* Mantém o display: none para mobile */
}

.negative-section, .positive-section {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.comparsion {
  width: 160px;
  height: 148px;
  background-color: var(--color-white);
  padding: 24px;
  box-shadow: 0px 4px 24px rgba(133, 140, 166, 0.25);
  border-radius: 12px;
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.comparsion p{
  font-size: 14px;
  font-family: var(--font-normal);
  font-weight: var(--font-weight-semiBold);
}

.negative-section .comparsion p{
  color: var(--color-text-gray);
}

.positive-section .comparsion p{
  color: var(--color-text-black);
}

/* Media Queries */
@media (min-width: 1024px) {
  h1 {
    font-size: 2.5rem;
    margin-bottom: 64px;
  }

  .indicator {
    padding: 16px 24px;
    gap: 16px;
  }

  .indicator p {
    font-size: 1rem;
  }

  .indicator svg {
    width: 22px;
    height: 22px;
  }

  .comparsion{
    width: 280px;
    height: 128px;
  }

  .comparsion p{
    font-size: 16px;
  }
  .choices-comparsion{
    gap: 128px;
  }

  .choices-comparsion img{
    display: block;
    opacity: 1;
  }
}

@media (min-width: 1440px) {

  h1 {
    font-size: 3rem;
  }

}
